name: Python Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Semantic versioning pattern

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Extract and Parse version info from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          MAJOR=$(echo "$VERSION" | cut -d. -f1)
          MINOR=$(echo "$VERSION" | cut -d. -f2)
          PATCH=$(echo "$VERSION" | cut -d. -f3)
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Registry Login (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and Push Python Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-python:${{ env.version }}
            ghcr.io/${{ github.repository }}-python:${{ env.version_major }}.${{ env.version_minor }}.${{ env.version_patch }}
            ghcr.io/${{ github.repository }}-python:${{ env.version_major }}.${{ env.version_minor }}.latest
            ghcr.io/${{ github.repository }}-python:${{ env.version_major }}.latest
            ghcr.io/${{ github.repository }}-python:latest

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
